#!/bin/bash

if pidof wf-recorder > /dev/null; then
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ wf-recorder
    recording_file=$(ps aux | grep "[w]f-recorder" | grep -o '/.*\.mp4')
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å
    killall -s SIGINT wf-recorder
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø—É—Ç–µ–º –∫ —Ñ–∞–π–ª—É
    notify-send "üé• –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: " "$recording_file" \
        --icon="video-x-generic" \
        --hint=int:transient:1
    exit 0
fi

selection=$(printf "–í–µ—Å—å —ç–∫—Ä–∞–Ω\n–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å\n–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä" | rofi -dmenu -i -p "–ú–µ–Ω—é –∑–∞–ø–∏—Å–∏ —ç–∫—Ä–∞–Ω–∞" -theme ~/.config/rofi/record.rasi)

generate_filename() {
    local dir="$HOME/–í–∏–¥–µ–æ"
    mkdir -p "$dir"
    echo "$dir/screencast_$(date +%Y%m%d_%H%M%S).mp4"
}

send_notification() {
    local file_path="$1"
    notify-send "üé• –ó–∞–ø–∏—Å—å –Ω–∞—á–∞—Ç–∞" "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ" \
        --hint=int:transient:1
}

start_recording() {
    local geometry="$1"
    local output="$2"
    if [ -n "$geometry" ]; then
        wf-recorder -g "$geometry" -f "$output" &
    else
        wf-recorder -f "$output" &
    fi
}

case "$selection" in
    "–í–µ—Å—å —ç–∫—Ä–∞–Ω")
        file_path=$(generate_filename)
        start_recording "" "$file_path"
        ;;
    "–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å")
        file_path=$(generate_filename)
        geometry=$(slurp)
        if [ -z "$geometry" ]; then
            exit 1
        fi
        start_recording "$geometry" "$file_path"
        ;;
    "–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä")
        active_monitor=$(hyprctl monitors -j | jq -r '.[] | select(.focused) | "\(.x),\(.y) \(.width)x\(.height)"')
        if [ -n "$active_monitor" ]; then
            file_path=$(generate_filename)
            start_recording "$active_monitor" "$file_path"
        else
            notify-send "–ù–µ –Ω–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä"
            exit 1
        fi
        ;;
    *)
        exit 1
        ;;
esac

if [ -n "$file_path" ]; then
    send_notification "$file_path"
fi
